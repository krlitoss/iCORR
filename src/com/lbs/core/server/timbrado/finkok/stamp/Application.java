
package com.lbs.core.server.timbrado.finkok.stamp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Application", targetNamespace = "http://facturacion.finkok.com/stamp")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Application {


    /**
     * This function provides the stamping service to resellers
     * 
     * @param username
     * @param xml
     * @param password
     * @return
     *     returns com.lbs.core.server.timbrado.finkok.stamp.AcuseRecepcionCFDI
     */
    @WebMethod(action = "stamp")
    @WebResult(name = "stampResult", targetNamespace = "http://facturacion.finkok.com/stamp")
    @RequestWrapper(localName = "stamp", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.Stamp")
    @ResponseWrapper(localName = "stampResponse", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.StampResponse")
    public AcuseRecepcionCFDI stamp(
        @WebParam(name = "xml", targetNamespace = "http://facturacion.finkok.com/stamp")
        byte[] xml,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/stamp")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/stamp")
        String password);

    /**
     * This function returns the stamp information of an invoice
     * 
     * @param username
     * @param xml
     * @param password
     * @return
     *     returns com.lbs.core.server.timbrado.finkok.stamp.AcuseRecepcionCFDI
     */
    @WebMethod(action = "stamped")
    @WebResult(name = "stampedResult", targetNamespace = "http://facturacion.finkok.com/stamp")
    @RequestWrapper(localName = "stamped", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.Stamped")
    @ResponseWrapper(localName = "stampedResponse", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.StampedResponse")
    public AcuseRecepcionCFDI stamped(
        @WebParam(name = "xml", targetNamespace = "http://facturacion.finkok.com/stamp")
        byte[] xml,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/stamp")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/stamp")
        String password);

    /**
     * This function provides the quick stamping service to resellers
     * 
     * @param username
     * @param xml
     * @param password
     * @return
     *     returns com.lbs.core.server.timbrado.finkok.stamp.AcuseRecepcionCFDI
     */
    @WebMethod(operationName = "quick_stamp", action = "quick_stamp")
    @WebResult(name = "quick_stampResult", targetNamespace = "http://facturacion.finkok.com/stamp")
    @RequestWrapper(localName = "quick_stamp", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.QuickStamp")
    @ResponseWrapper(localName = "quick_stampResponse", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.QuickStampResponse")
    public AcuseRecepcionCFDI quickStamp(
        @WebParam(name = "xml", targetNamespace = "http://facturacion.finkok.com/stamp")
        byte[] xml,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/stamp")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/stamp")
        String password);

    /**
     * This method returns the status of a peding buffer invoice by using an uuid
     * 
     * @param username
     * @param uuid
     * @param password
     * @return
     *     returns com.lbs.core.server.timbrado.finkok.stamp.QueryPendingResult
     */
    @WebMethod(operationName = "query_pending", action = "query_pending")
    @WebResult(name = "query_pendingResult", targetNamespace = "http://facturacion.finkok.com/stamp")
    @RequestWrapper(localName = "query_pending", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.QueryPending")
    @ResponseWrapper(localName = "query_pendingResponse", targetNamespace = "http://facturacion.finkok.com/stamp", className = "com.lbs.core.server.timbrado.finkok.stamp.QueryPendingResponse")
    public QueryPendingResult queryPending(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/stamp")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/stamp")
        String password,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/stamp")
        String uuid);

}
